# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.1-browsers
      - image: circleci/mysql:5.7   # https://hub.docker.com/r/circleci/mysql/
        environment:
            MYSQL_DATABASE=prs_test
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install System Dependencies
          command: |
                sudo apt install -y libmcrypt-dev git unzip wget libpng-dev libzip-dev libsqlite3-dev libnss3 libgconf-2-4
                sudo apt install -y libfontconfig1 chromium xvfb mysql-client


          # Install additional PHP modules

      - run:
          name: Install PHP Extensions
          command: |
                sudo pecl channel-update pecl.php.net
                sudo pecl install zip && sudo docker-php-ext-enable zip
                #sudo pecl install xdebug && sudo docker-php-ext-enable xdebug
                sudo docker-php-ext-install gd
                sudo docker-php-ext-install bcmath && sudo docker-php-ext-enable bcmath
                sudo docker-php-ext-install mcrypt && sudo docker-php-ext-enable mcrypt
                sudo docker-php-ext-install pdo_mysql && sudo docker-php-ext-enable pdo_mysql

      - run:
          name: Setup Environment
          command: |
            cp .env.circleci .env

      - run:
          name: Composer Install
          command: composer install -n

      - run:
          name: Setup Environment
          command: |
            php artisan key:generate

      - run:
          name: Set up test db
          command: |
              #touch storage/testing.sqlite
              php artisan migrate
              php artisan db:seed

      - run:
          name: Unit Tests
          command: vendor/bin/phpunit

      - store_test_results:
          path: ./tests/Unit/test-results

      - run:
          name: Start xvfb
          background: true
          command: /usr/bin/Xvfb :0 -screen 0 1280x720x24

      - run:
          name: Open Browsers
          background: true
          command: DISPLAY=:0 ./vendor/laravel/dusk/bin/chromedriver-linux

      - run:
          name: Serve Application
          background: true
          command: APP_ENV=testing DB_DATABASE=circle_test php artisan serve

      - run:
          name: Dusk Tests
          command: php artisan dusk

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      - store_artifacts:
          path: ./storage/logs
          destination: logs

      - store_artifacts:
          path: ./tests/Browser/console
          destination: console

      - store_artifacts:
          path: ./tests/Browser/screenshots
          destination: screenshots
